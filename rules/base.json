{
    "type": {
        "null": {},
        "boolean": {},
        "number": {},
        "integer": {},
        "string": {},
        "array": {},
        "object": {},
        "any": {}
    },
    "format": {
        "date-time": {},
        "date": {},
        "time": {},
        "utc-millisec": {},
        "regex": {},
        "color": {},
        "style": {},
        "phone": {},
        "uri": {},
        "uriref": {
            "synonym": ["uri-reference"]
        },
        "uri-reference": {
            "synonym": ["uriref"]
        },
        "uri-template": {},
        "json-pointer": {},
        "email": {},
        "ip-address": {
            "synonym": ["ipv4"]
        },
        "ipv4": {
            "synonym": ["ip-address"]
        },
        "ipv6": {},
        "host-name": {
            "synonym": ["hostname"]
        },
        "hostname": {
            "synonym": ["host-name"]
        }
    },
    "core": {
        "$ref": {},
        "$schema": {},
        "$id": {
            "synonym": ["id"]
        },
        "id": {
            "synonym": ["$id"]
        }
    },
    "metadata": {
        "definitions": {
            "info": {
                "isSchemaContainer": true
            }
        },
        "title": {},
        "description": {},
        "default": {},
        "examples": {}
    },
    "validation": {
        "disallow": {},
        "extends": {},
        "divisibleBy": {
            "synonym": ["multipleOf"]
        },
        "multipleOf": {
            "synonym": ["divisibleBy"]
        },
        "maximum": {},
        "exclusiveMaximum": {},
        "minimum": {},
        "exclusiveMinimum": {},
        "minLength": {},
        "maxLength": {},
        "pattern": {},
        "items": {
            "info": {
                "isSchema": true
            }
        },
        "additionalItems": {
            "info": {
                "isSchema": true
            }
        },
        "maxItems": {},
        "minItems": {},
        "uniqueItems": {},
        "contains": {
            "info": {
                "isSchema": true
            }
        },
        "properties": {
            "info": {
                "isSchemaContainer": true
            }
        },
        "patternProperties": {
            "info": {
                "isSchemaContainer": true
            }
        },
        "additionalProperties": {
            "info": {
                "isSchemaContainer": true
            }
        },
        "maxProperties": {},
        "minProperties": {},
        "required": {},
        "dependencies": {},
        "propertyNames": {},
        "type": {},
        "const": {},
        "enum": {},
        "allOf": {
            "info": {
                "isSchema": true
            }
        },
        "anyOf": {
            "info": {
                "isSchema": true
            }
        },
        "oneOf": {
            "info": {
                "isSchema": true
            }
        },
        "not": {
            "info": {
                "isSchema": true
            }
        },
        "format": {}
    },
    "standard": {
        "allowUndefinedTypes": {
            "description": "Whether other, non-spec primitive types are allowed"
        },
        "selfDescriptiveMetaSchema": {
            "description": "Whether the meta-schema must be valid against itself"
        },
        "requiredIsBoolean": {
            "description": "Whether 'required' is a boolean"
        },
        "allowSimpleDependencies": {
            "description": "Whether 'dependencies' may directly list a string property, of an array of such"
        },
        "formatSchemaURI": {
            "description": "Whether custom formats may be expressed as a schema URI, such schema being suitable for validation of the format"
        },
        "allowSchemaInUnionType": {
            "description": "Whether a schema may be used as an item within a 'type' array"
        },
        "allowBooleanSchema": {
            "description": "Whether a schema may be a boolean"
        },
        "allowIntegerWithFractionalPart": {
            "description": "Whether an integer may be a float with a zero fractional part"
        },
        "allowAdditionalItemsBoolean": {
            "description": "Whether 'additionalItems' may be a boolean, despite 'allowBooleanSchema'"
        },
        "exclusiveMinMaxIsNumber": {
            "description": "Whether 'exclusiveMinimum' & 'exclusiveMaximum' are numbers"
        }
    }
}
